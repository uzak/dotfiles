# Use a 256 color terminal
set -g default-terminal "xterm-256color"

# zsh
#set -g default-shell $SHELL

# bind default prefix to ctrl-a
set -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# more history
set -g history-limit 10000

# Fix for sending keys to Vim
setw -g xterm-keys on

# set esc-timeout to 50ms (better vim)
set -sg escape-time 50

# use vim motions :-)
#setw -g mode-keys vi

# Force a reload of te config file
unbind-key r
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded!"


# Saner window splitting / new windows
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Easier resizing
unbind-key -n C-j
unbind-key -n C-k
unbind-key -n C-h
unbind-key -n C-l
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-h resize-pane -L
bind-key -r C-l resize-pane -R

# Smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select#-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Mouse support
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# counting panes starts at 1
set -g base-index 1
setw -g pane-base-index 1

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux
#set-option -g assume-paste-time 0

# How long should we show any messages?
set -g display-time 3000




#===============================================================================
#
# DESIGN
#
# DESIGN: 256 COLOR SUPPORT
setw -g default-terminal "screen-256color"

# DESIGN: PANES
#set -g pane-active-border-style fg=colour24,bg=colour250
#set -g pane-border-style fg=colour250,bg=colour250

# DESIGN: MESSAGING
set -g message-command-style fg=blue,bg=black
set -g message-style fg=colour59,bg=colour226

# DESIGN: MODES
setw -g clock-mode-colour colour135
set -g mode-style fg=colour160,bold,bg=colour238,bold

# DESIGN: STATUSBAR BOTTOM
set -g status-style fg=white,bg=colour250
set -g status-interval 2
set -g status-position bottom

# DESIGN: WINDOW STATUS
# new: window-active-style
# new: window-status-activity-style
# new:  window-status-bell-style fg=white,bg=black
# new: window-status-current-style
# new: window-status-last-style
# new: window-status-style
# new: window-style
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=white]#[bg=colour59] #I #[fg=colour59]#[bg=colour254] #W "
setw -g window-status-current-format "#[fg=white]#[bg=colour24] #I #[fg=colour24]#[bg=colour254] #W "
#setw -g window-status-current-bg pink
#setw -g window-status-current-fg grey
#setw -g window-status-current-attr dim
#setw -g window-status-bg green
#setw -g window-status-fg black
set -g status-right-length 50
set -g status-left-length 20
# items left to the tabs
set -g status-left ''
# items right to the tabs
set -g status-right '#[fg=colour59,bg=colour250,bold] %y/%m/%d |#[fg=colour59,bg=colour250,bold] %H:%M:%S '
#set -g status-right ''

setw -g window-status-bell-style fg=red,bold
set-window-option -g window-status-bell-style bg=colour160
